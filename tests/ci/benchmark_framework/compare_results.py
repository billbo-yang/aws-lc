import sys
import pandas as pd
import numpy as np
import csv

if len(sys.argv) != 4:
    print("Usage: compare_results.py [file1] [file2] [output filename]")
    sys.exit(1)

file1 = sys.argv[1]
file2 = sys.argv[2]

if not (file1.endswith(".json") or file1.endswith(".csv")) and not (file2.endswith(".json") or file2.endswith(".csv")):
    print("Provided files must either be .json files or .csv files")
    sys.exit(1)

# read contents of file1 into a dataframe in preparation for comparison
if file1.endswith(".json"):
    df1 = pd.read_json(file1)
else:
    # this assumes we're using a csv generated by convert_json_to_csv.py
    df1 = pd.read_csv(file1, skiprows=1, index_col=0)

# read contents of file2 into a dataframe in preparation for comparison
if file2.endswith(".json"):
    df2 = pd.read_json(file2)
else:
    # this assumes we're using a csv generated by convert_json_to_csv.py
    df2 = pd.read_csv(file2, skiprows=1, index_col=0)

# only compare benchmarks that appear in both of the files
if df1.shape[0] > df2.shape[0]:
    df1 = df1[df1.iloc[:, 0].isin(df2.iloc[:, 0])]
elif df2.shape[0] > df1.shape[0]:
    df2 = df2[df2.iloc[:, 0].isin(df1.iloc[:, 0])]

df1_numCalls = df1.iloc[:, 1]
df2_numCalls = df2.iloc[:, 1]

dfs = pd.concat([df1, df2], axis=1)

# we want things that have a +10% regression
compared = np.where(((df2_numCalls - df1_numCalls)/df1_numCalls*100 <= -10), df1.iloc[:, 0], np.nan)

compared_df = dfs.loc[dfs.iloc[:, 0].isin(compared)]
compared_df = compared_df.dropna()
compared_df["Percentage Difference"] = ((compared_df.iloc[:, 5] - compared_df.iloc[:, 1])/compared_df.iloc[:, 1]*100)

# if the compared dataframe isn't empty, there are significant regressions present
if not compared_df.empty:
    output_file = sys.argv[3]
    if not output_file.endswith(".csv"):
        output_file += ".csv"

    with open(output_file, "w") as f:
        f.write("{},,,,{},,,,\n".format(file1, file2))
    compared_df.to_csv(output_file, index=False, mode='a')

    # exit with an error code to denote there is a regression
    exit(5)
