# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
schemaVersion: '2.2'
description: aws-lc:bmFrameworkEc2Benchmark
mainSteps:
  - action: aws:runShellScript
    name: runShellScript
    inputs:
      timeoutSeconds: '7200'
      runCommand:
        - sudo -i
        - export DEBIAN_FRONTEND=noninteractive
        - # create bm_framework directory and checkout aws-lc
        - mkdir bm_framework
        - cd bm_framework
        - git clone https://github.com/awslabs/aws-lc.git
        # install docker
        - apt-get update
        - apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        # need to change below depending on cpu type
        - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        - apt-get update
        - apt-get install -y docker-ce docker-ce-cli containerd.io
        # build docker image and get dependencies from it
        - cd aws-lc
        - mkdir build
        - mkdir fips_build
        - docker build -t ubuntu-20.04:base tests/ci/docker_images/linux-x86/ubuntu-20.04_base/
        - docker build -t ubuntu-20.04:clang-7x tests/ci/docker_images/linux-x86/ubuntu-20.04_clang-7x/
        - exec_docker="docker run -v `pwd`:`pwd` -v `pwd`/build:`pwd`/build -v `pwd`/fips_build:`pwd`/fips_build -w `pwd` -i ubuntu-20.04:clang-7x"
        # build the repo and benchmark!
        - $exec_docker cmake -Bbuild -H. -GNinja -DCMAKE_BUILD_TYPE=Release -DAWSLC_INSTALL_DIR=/root/bm_framework/aws-lc
        - $exec_docker ninja -C build
        - $exec_docker cmake -Bfips_build -H. -GNinja -DFIPS=1 -DCMAKE_BUILD_TYPE=Release -DAWSLC_INSTALL_DIR=/root/bm_framework/aws-lc
        - $exec_docker ninja -C fips_build
        - taskset -c 0 ./build/tool/awslc_bm -timeout 3 -json > aws-lc_prod_bm.json &
        - prod_pid=$!
        - taskset -c 1 ./fips_build/tool/awslc_bm -timeout 3 -json > aws-lc_prod_fips_bm.json &
        - prod_fips_pid=$!
        # wait for the background processes to finish before moving on
        - wait "${prod_pid}"
        - wait "${prod_fips_pid}"
        - datetime=$(date) #this is a temporary replacement for commitid or PRid
        - $exec_docker aws s3 mv build/tool/aws-lc_prod_bm.json s3://{AWS_ACCOUNT_ID}-aws-lc-bm-framework-prod-bucket/"${datetime}"/aws-lc_prod_bm.json
        - $exec_docker aws s3 mv fips_build/tool/aws-lc_prod_fips_bm.json s3://{AWS_ACCOUNT_ID}-aws-lc-bm-framework-prod-bucket/"${datetime}"/aws-lc_prod_fips_bm.json